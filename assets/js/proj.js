/*Research Details Table*/

const researchTable = document.querySelector(".main");

const research = [
  {
    "title": "Visual Presenter v2.0",
    "authors": "Автоматизация управления ПК в бизнес-процессах с использованием компьютерного зрения",
    "conferences": "C#, Python, C",
    "researchYr": 2024,
    "citebox": "popup1",
    "image": "assets/images/project-page/visualpres.jpg",
    "citation": {
      "vancouver": "Visual Presenter v2.0 — это система компьютерного зрения, которая позволяет полностью управлять компьютером с помощью жестов без использования дополнительных устройств. Она распознаёт 9 частей тела и 46 ключевых точек, обеспечивая точное взаимодействие. Решение предназначено для автоматизации выступлений и презентаций на сцене или перед большой аудиторией, оптимизируя бизнес-процессы и делая управление интуитивным и бесконтактным. Данное ПО активно используется в Колледже информатики и программирования при Финансовом Университете."
    },
    "abstract": "Visual Presenter v2.0 — система компьютерного зрения для управления ПК жестами.",
    "absbox": "absPopup1"
  },

  {
    "title": "Lux Voice",
    "authors": "Интеллектуальное голосовое управление для повышения продуктивности и автоматизации работы за ПК",
    "conferences": "C#",
    "researchYr": 2024,
    "citebox": "popup2",
    "image": "assets/images/project-page/lux.jpg",
    "citation": {
      "vancouver": "Lux Voice — интеллектуальный голосовой ассистент, разработанный на языке C# для автоматизации взаимодействия с компьютером. Система функционирует в реальном времени, используя потоковое распознавание речи и обработку естественного языка (NLP). Lux Voice включает модули интерпретации голосовых команд, контекстной обработки и адаптации под сценарии конкретного пользователя. Решение ориентировано на повышение продуктивности, обеспечение hands-free взаимодействия, а также поддержку пользователей с особыми потребностями в офисной и публичной среде. Когда я присоединился к проекту, команда находилась в состоянии организационной неопределенности. Я взял на себя инициативу по реорганизации: выстроил архитектуру системы с нуля, сплотил команду, инициировал набор новых специалистов, наладил эффективную коммуникацию и оптимизировал бизнес-процессы. Этот опыт стал для меня важной вехой — он дал возможность проявить лидерские качества, системно мыслить и управлять развитием сложного продукта."
    },
    "abstract": "Голосовой ассистент для управления ПК в реальном времени с помощью речи. Повышает продуктивность и автоматизирует задачи.",
    "absbox": "absPopup2"
  },

  {
    "title": "NeuroOrto.Pro",
    "authors": "Оценка двигательных нарушений и подбор лечения при ДЦП для врачей-специалистов",
    "conferences": "Flutter/Dart",
    "researchYr": 2025,
    "citebox": "popup3",
    "image": "assets/images/project-page/neuroorto.png",
    "citation": {
      "vancouver": "NeuroOrto.Pro — мобильное приложение, разработанное на Flutter (Dart), предназначенное для врачей-неврологов и нейроортопедов, занимающихся диагностикой и лечением детей с детским церебральным параличом (ДЦП). Приложение позволяет оценивать степень двигательных нарушений по шкале GMFCS, своевременно рекомендовать проведение рентгенографии тазобедренных суставов и денситометрии, а также использовать видеоанализ походки для подбора ортезов. Встроенный функционал рентгенологического скрининга помогает выявлять риски на ранних этапах и повышать точность клинических решений. Проект реализуется в тесном сотрудничестве с кандидатом медицинских наук, и направлен на создание практических инструментов для повседневной работы специалистов в клиниках по всей стране. Приложение уже вызвало интерес со стороны ведущих медицинских экспертов и авторитетных врачей. Благодаря ему удалось начать закрывать существенный пробел в диагностике и сопровождении пациентов с ДЦП, тем самым внося вклад в повышение качества медицинской помощи в нашей стране."
    },
    "abstract": "Приложение для диагностики, классификации и подбора лечения пациентов с ДЦП.",
    "absbox": "absPopup3"
  },

  {
    "title": "Клиент-Сервер",
    "authors": "Проект клиент-серверной архитектуры на C++",
    "conferences": "C++",
    "researchYr": "2023",
    "citebox": "popup20",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "Клиент-Сервер — это обучающий проект на C++, демонстрирующий принципы работы клиент-серверного взаимодействия. Сервер обрабатывает входящие соединения от клиентов, принимает и обрабатывает сообщения, а также отправляет ответы. Клиенты подключаются по IP/порту, отправляют команды и получают результаты. Реализованы базовые механизмы синхронизации, многопоточности и управление соединениями, обеспечивающие устойчивую и быструю работу системы." 
    },
    "abstract": "Клиент-Сервер — C++ приложение, демонстрирующее работу клиент-серверной архитектуры с возможностью обмена сообщениями, обработки запросов и организации сетевого взаимодействия.",
    "absbox": "absPopup20"
  },

  {
    "title": "Visual Presenter v1.0",
    "authors": "Автоматизация управления ПК жестами на сцене и в публичных выступлениях без дополнительного оборудования",
    "conferences": "Python",
    "researchYr": 2023,
    "citebox": "popup5",
    "image": "assets/images/project-page/visualpres.jpg",
    "citation": {
      "vancouver": "Visual Presenter v1.0 — первая версия системы компьютерного зрения для управления ПК с помощью жестов, разработанная на языке Python. Консольное приложение использует анализ видео с камеры для распознавания 9 частей тела и 46 ключевых точек. Система позволяет взаимодействовать с ПК без физического контакта и посторонних устройств, ориентирована на автоматизацию презентаций, выступлений и других публичных задач. Подходит для сценических условий и бизнес-презентаций, где необходим бесконтактный интерфейс управления."
    },
    "abstract": "Первая версия системы компьютерного зрения для управления ПК жестами. Консольное приложение на Python.",
    "absbox": "absPopup5"
  },

  {
    "title": "HeyHealthy",
    "authors": "Составление персональных тренировок и взаимодействие с ИИ для спортивной активности",
    "conferences": "Kotlin",
    "researchYr": 2024,
    "citebox": "popup6",
    "image": "assets/images/project-page/hey.png",
    "citation": {
      "vancouver": "HeyHealthy — мобильное фитнес-приложение, разработанное на Kotlin, предназначенное для помощи пользователям в создании персонализированных тренировок. В базе содержится 96 упражнений, разделённых по типу нагрузки, целям и уровням подготовки. Встроенный ИИ-модуль 'GPT-спорт' помогает пользователю составить план тренировок на основе целей, состояния здоровья и предпочтений. Приложение реализует адаптивные рекомендации, трекинг прогресса, генерацию напоминаний и визуальные инструкции для каждого упражнения."
    },
    "abstract": "Фитнес-приложение с ИИ-помощником и 96 упражнениями для составления персональных тренировок. Kotlin.",
    "absbox": "absPopup6"
  },

  {
    "title": "GS_sevase2.0",
    "authors": "Усовершенствованный голосовой ассистент с расширенным функционалом и улучшенным распознаванием запросов",
    "conferences": "Python",
    "researchYr": 2020,
    "citebox": "popup7",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "GS_sevase2.0 — усовершенствованная версия голосового ассистента, разработанная на Python, с улучшенной точностью распознавания запросов и расширенным функционалом. Ассистент поддерживает три режима скорости речи (быстрый, средний, медленный) и позволяет выполнять разнообразные действия: запуск приложений, открытие сайтов, воспроизведение музыки, управление устройствами через голосовые команды, запросы о погоде, времени и информацию из Википедии, Google и YouTube. Интерфейс включает возможность физического взаимодействия, а также функцию пассивной заглушки для игнорирования команд."
    },
    "abstract": "Голосовой ассистент с улучшенной точностью распознавания запросов и тремя режимами скорости речи. Python.",
    "absbox": "absPopup7"
  },

  {
    "title": "Client-Server-Cmd-ИВК",
    "authors": "Реализация сокет-связи между клиентом и сервером для управления командами и передачи данных",
    "conferences": "Python",
    "researchYr": 2023,
    "citebox": "popup8",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "Client-Server-Cmd-ИВК — проект, разработанный на Python для создания сокет-связи между клиентами и сервером. Сервер создает сокет, привязывается к заданному IP-адресу и порту, обрабатывает входящие соединения, выполняет команды и передает результаты клиентам. Каждый клиент получает UUID и может отправлять команды серверу, а также обмениваться файлами и выполнять команды между собой. Проект был реализован в компании АО 'ИВК' и работает как на платформе AltLinux (Linux), так и на Windows. Включает в себя взаимодействие клиентов через сокеты и поддержку работы с файлами."
    },
    "abstract": "Система клиент-сервер для выполнения команд и передачи данных с использованием сокетов. Разработано на Python.",
    "absbox": "absPopup8"
  },

  {
    "title": "DeliveryAPP",
    "authors": "Автоматизация доставки и сборки заказов еды через мобильное приложение",
    "conferences": "Kotlin",
    "researchYr": 2023,
    "citebox": "popup4",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "DeliveryAPP — мобильное приложение, написанное на языке Kotlin, предназначенное для организации доставки и сборки заказов еды. Система включает пользовательский интерфейс для оформления заказов, карту в реальном времени с отслеживанием курьера, алгоритмы оптимизации маршрутов, поддержку push-уведомлений и API-интеграцию с кассами и складскими системами. Приложение обеспечивает быстрый и прозрачный процесс доставки, позволяя пользователям в реальном времени отслеживать статус заказа, а курьерам — работать эффективно с учётом геолокации и маршрутов."
    },
    "abstract": "Приложение для заказа, сборки и доставки еды с геолокацией и системой уведомлений.",
    "absbox": "absPopup4"
  },

  {
    "title": "InfoVerseBot",
    "authors": "Многофункциональный бот для поиска информации и управления чатами",
    "conferences": "Python",
    "researchYr": 2022,
    "citebox": "popup9",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "InfoVerseBot — многофункциональный бот, разработанный на Python, который предоставляет пользователю широкий доступ к информации. С помощью этого бота можно получать текущую и прогнозируемую погоду, переводить текст на несколько языков, искать информацию в Википедии, отправлять отзывы, конвертировать валюты, а также подкидывать монетки для принятия решений. Бот поддерживает команды для удобного взаимодействия и модерирует чаты для улучшения коммуникации."
    },
    "abstract": "Многофункциональный бот для получения информации, перевода текстов, конвертации валют и модерирования чатов. Написан на Python.",
    "absbox": "absPopup9"
  }, 

  {
    "title": "KeyLogger",
    "authors": "Инструмент для захвата клавиш и мониторинга активности",
    "conferences": "Python",
    "researchYr": 2022,
    "citebox": "popup10",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "KeyLogger — проект, разработанный на Python, предназначенный для захвата данных клавиатуры и хранения их в текстовом файле. Бот работает в скрытом режиме, автоматически отправляя логи на почту каждые 30 минут, и шифрует данные для обеспечения безопасности. Программа автоматически запускается при старте системы и предоставляет подробные журналы нажатий клавиш с отметками времени, что помогает отслеживать активность пользователя. Этот инструмент предназначен исключительно для познания и практического изучения."
    },
    "abstract": "Программа для скрытого мониторинга клавиатурной активности с отправкой зашифрованных логов на почту. Написана на Python.",
    "absbox": "absPopup10"
  },

  {
    "title": "Команда профи",
    "authors": "Инновационная образовательная платформа для управления учебным процессом и взаимодействия между студентами и преподавателями",
    "conferences": "C#",
    "researchYr": 2024,
    "citebox": "popup11",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "Команда профи — инновационная образовательная платформа, разработанная на C#, которая упрощает процесс обучения и управление учебными материалами. Платформа включает административную панель для управления контентом и заданиями, а также систему баллов для выполнения заданий, с учетом прогресса студентов в рейтинговой таблице. Студенты могут зарегистрироваться, отправлять задания на проверку и общаться с преподавателями. Личные кабинеты для пользователей обеспечивают удобный доступ к индивидуальной информации и результатам. Команда профи способствует эффективному взаимодействию между студентами и преподавателями, мотивируя учеников к лучшим результатам."
    },
    "abstract": "Образовательная платформа для управления заданиями, рейтинговой таблицей и взаимодействия студентов с преподавателями. Разработано на C#.",
    "absbox": "absPopup11"
  },  

  {
    "title": "PL-tutorial",
    "authors": "Приложение-справочник по языкам программирования Python и C#",
    "conferences": "C#",
    "researchYr": 2023,
    "citebox": "popup12",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "PL-tutorial — удобное приложение, разработанное на C#, которое служит справочником по языкам программирования Python и C#. Оно предлагает подробную информацию о синтаксисе, ключевых особенностях и примерах кода для этих языков. Приложение включает функционал GPT для помощи и ответов на вопросы, что делает процесс обучения более интерактивным. С интуитивно понятным интерфейсом и персонализацией через настройки, PL-tutorial также предоставляет свежие новости об обновлениях и позволяет отслеживать версионность. Это приложение помогает пользователям освоить основы и особенности Python и C#."
    },
    "abstract": "Приложение-справочник по Python и C# с интеграцией GPT для ответов на вопросы и предоставлением актуальной информации. Разработано на C#.",
    "absbox": "absPopup12"
  },

  {
    "title": "QRcoder",
    "authors": "Приложение для создания и управления QR кодами с различными параметрами и настройками безопасности",
    "conferences": "C#",
    "researchYr": 2024,
    "citebox": "popup13",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "QRcoder — удобное приложение, разработанное на C#, для создания и управления QR кодами с множеством настроек. Пользователи могут создавать QR коды с возможностью выбора цвета, а также использовать ECC защиту для повышения безопасности. Все созданные коды сохраняются в базе данных приложения, предоставляя возможность сканировать и удалять их в любое время. Встроенный считыватель и расшифрователь позволяют работать с кодами, включая те, которые содержат зашифрованные данные. Также предусмотрена возможность создания QR кодов с электронной подписью для повышения уровня безопасности."
    },
    "abstract": "Приложение для создания и управления QR кодами с настройками безопасности и хранения в базе данных. Разработано на C#.",
    "absbox": "absPopup13"
  },

  {
    "title": "CompVision_ProjKip_3V",
    "authors": "Представление игр и приложений с использованием компьютерного зрения, разработанных для учебных выставок.",
    "conferences": "C Python",
    "researchYr": "Last year",
    "citebox": "popup14",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "CompVision_ProjKip_3V представляет собой набор из пяти программ, использующих компьютерное зрение для управления и взаимодействия, предназначенных для выставок учебных заведений, таких как Финансовый университет и Колледж информатики и программирования при Финансовом Университете. Включает игры и образовательные проекты с применением компьютерного зрения для интерактивного взаимодействия. Программы включают 'detect_face.py', 'game_circle_reaction.py', 'game_pin_pong.py', 'game_snake.py', 'peop_detect_all.py', 'qr_time.py', 'science_detected_peop.py', 'science_project_growth.py'. Каждое приложение оснащено обработчиками ошибок для стабильной работы."
    },
    "abstract": "Комплекс программ с применением компьютерного зрения, управляемых с гейм-бара, предназначен для образовательных выставок в учебных заведениях.",
    "absbox": "absPopup14"
  },

  {
    "title": "GS_Vet_Clinic",
    "authors": "Голосовой автоответчик для ветеринарной клиники на основе модели распознавания речи Vosk.",
    "conferences": "Python, C",
    "researchYr": "2023",
    "citebox": "popup15",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "GS_Vet_Clinic — голосовой автоответчик, разработанный для ветеринарной клиники. Использует офлайн-модель распознавания речи Vosk для обработки голосовых запросов клиентов, реализован на Python и C. Обеспечивает автоматическое взаимодействие с клиентами: определение цели звонка, маршрутизация к нужному специалисту или предоставление информации без участия оператора."
    },
    "abstract": "Интеллектуальный автоответчик на базе Vosk, реализованный на Python и C, предназначен для автоматической обработки входящих звонков в ветеринарной клинике.",
    "absbox": "absPopup15"
  },  

  {
    "title": "Светлячок",
    "authors": "CRM-система для автоматизации работы детского сада.",
    "conferences": "C#",
    "researchYr": "2023",
    "citebox": "popup16",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "Светлячок — CRM-система, разработанная на C# для автоматизации процессов в детском саду. Обеспечивает учет детей, расписаний, питания, посещаемости и коммуникации с родителями. Интерфейс ориентирован на простоту использования персоналом образовательного учреждения."
    },
    "abstract": "Светлячок — это удобная CRM-система на C#, предназначенная для управления детским садом. Система облегчает администрирование, отслеживание посещаемости, учет питания, взаимодействие с родителями и организацию повседневной деятельности учреждения.",
    "absbox": "absPopup16"
  },

  {
    "title": "WEB-API-DB-Charities",
    "authors": "API для взаимодействия мобильного приложения с базой данных благотворительных организаций.",
    "conferences": "C#, JavaScript",
    "researchYr": "2023",
    "citebox": "popup17",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "WEB-API-DB-Charities — RESTful API, разработанный на C# с использованием ASP.NET, предназначен для доступа к базе данных благотворительных организаций, интегрируемой с мобильным приложением. Поддерживает операции CRUD, авторизацию и фильтрацию данных."
    },
    "abstract": "Проект представляет собой API-интерфейс на C# (ASP.NET), предоставляющий доступ к базе данных благотворительных организаций для мобильного приложения. Используется для получения, обновления и хранения информации о фондах, пожертвованиях и пользователях. Также может включать веб-интерфейс на JavaScript для администрирования данных.",
    "absbox": "absPopup17"
  },

  {
    "title": "Find_File_all_sys",
    "authors": "Многофункциональная поисковая система файлов для Windows на Python",
    "conferences": "Python",
    "researchYr": "2024",
    "citebox": "popup18",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "Find_File_all_sys — это усовершенствованная поисковая система для Windows, разработанная на Python. Она поддерживает поиск по ключевым словам в файлах и по всей файловой системе, определение полного пути к файлам, выбор режима через удобное меню и вывод результатов в структурированном виде. Программа использует асинхронную обработку и многозадачность для увеличения скорости работы."    },
    "abstract": "Find_File_all_sys — это усовершенствованная система поиска файлов на Python, предназначенная для ОС Windows, с поддержкой асинхронного поиска, фильтрации по ключевым словам и построения словарей результатов.",
    "absbox": "absPopup18"
  },

  {
    "title": "console_Derevo_Moskvitina",
    "authors": "Фрактальное дерево Москвитина — консольное приложение на C#",
    "conferences": "C#",
    "researchYr": "2023",
    "citebox": "popup19",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "Console_Derevo_Moskvitina — это консольное приложение на языке C#, реализующее построение фрактального дерева по принципу дерева Москвитина. Пользователь может настраивать параметры дерева: угол наклона ветвей, их цвет, длину, направление и расположение. После генерации дерево сохраняется в файл и автоматически открывается в установленном фоторедакторе."    },
    "abstract": "Console_Derevo_Moskvitina — консольное приложение на C# для генерации фрактального дерева Москвитина с возможностью настройки визуальных параметров и автоматическим открытием результата в графическом редакторе.",
    "absbox": "absPopup19"
  },

  {
    "title": "Discord-Bot-sevase",
    "authors": "Дискорд-бот для управления сервером и развлечения",
    "conferences": "Python",
    "researchYr": "2024",
    "citebox": "popup21",
    "image": "assets/images/project-page/nosuch.jpg",
    "citation": {
      "vancouver": "Discord-Bot-sevase — это кастомный бот для Discord, разработанный для управления сервером и развлечения его участников. Он поддерживает фильтрацию сообщений, систему банвордов с возможностью настраивать длительность мута/бана, команды для выдачи и снятия наказаний (бан, мут, размут, кик), очистку чата и отображение справки по командам. Также бот умеет подключаться к голосовому каналу и проигрывать музыку с YouTube. Продуман интерфейс взаимодействия и обратная связь при неправильном вводе команд. Проект был выполнен под заказ."
        },
    "abstract": "Discord-Bot-sevase — мощный Discord-бот, реализованный на Python, предназначенный для улучшения модерации и взаимодействия на сервере, включая музыку, фильтрацию, банворды и другие функции.",
    "absbox": "absPopup21"
  },
];
AOS.init();
const fillData = () => {
  let output = "";
  research.forEach(
    ({
      image,
      title,
      authors,
      conferences,
      researchYr,
      citebox,
      citation,
      absbox,
      abstract,
    }) =>
      (output += `
            <tr data-aos="zoom-in-left"> 
                <td class="imgCol"><img src="${image}" class="rImg"></td>
                <td class = "researchTitleName">
                    <div class="img-div">
                        <span class="imgResponsive">
                            <img src="${image}" class="imgRes">
                        </span>
                    </div>
                    <a href="#0" class="paperTitle"> ${title} </a> 
                    <div class = "authors"> ${authors} </div> 
                    
                    <div class="rConferences"> ${conferences} 
                        <div class="researchY">${researchYr}</div>
                    </div>
                    
                    <!--CITE BUTTON-->
                    <div class="d-flex" style="margin-right:5%;">
                        <button class="button button-accent button-small text-right button-abstract " type="button" data-toggle="collapse" data-target="#${absbox}" aria-expanded="false" aria-controls="${absbox}">
                            Кратко
                        </button>
                
                        <button class="button button-accent button-small text-right button-abstract " type="button" data-toggle="collapse" data-target="#${citebox}" aria-expanded="false" aria-controls="${citebox}">
                            Подробнее
                        </button>
                    </div>
                    <div id="${absbox}" class="collapse" aria-labelledby="headingTwo" data-parent=".collapse">
                        <div class="card-body">
                            ${abstract}    
                        </div>
                    </div>
                    <div id="${citebox}" class="collapse" aria-labelledby="headingTwo" data-parent=".collapse">
                        <div class="card-body">
                            ${citation.vancouver}    
                        </div>
                    </div>
                </td>
            </tr>`)
  );
  researchTable.innerHTML = output;

  const showMoreBtn = document.getElementById('showMoreBtn');
  const rows = Array.from(document.querySelectorAll('#researchDetailsTable tr'));

  // Скрываем все tr, начиная с индекса 4 (то есть с пятой строки)
  rows.slice(5).forEach(tr => tr.classList.add('hidden'));

  showMoreBtn.addEventListener('click', () => {
    rows.forEach(tr => tr.classList.remove('hidden'));
    showMoreBtn.style.display = 'none';
  });

};
document.addEventListener("DOMContentLoaded", fillData);
